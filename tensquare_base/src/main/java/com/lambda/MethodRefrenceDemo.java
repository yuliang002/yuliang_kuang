package com.lambda;

import java.util.ArrayList;
import java.util.List;
import java.util.function.BiFunction;
import java.util.function.Consumer;
import java.util.function.IntUnaryOperator;
import java.util.function.Supplier;

class Dog {
	private String name = "?????";

	/**
	 * ???10????
	 */
	private int food = 10;

	public Dog() {

	}

	/**
	 * ?????????????
	 * 
	 * @param name
	 */
	public Dog(String name) {
		this.name = name;
	}

	/**
	 * ???��????????
	 * 
	 * @param dog
	 */
	public static void bark(Dog dog) {
		System.out.println(dog + "????");
	}

	/**
	 * ????? JDK
	 * 
	 * ???????????????????????????????this??��??????????
	 * 
	 * @param num
	 * @return ?????????
	 */
	public int eat(int num) {
		System.out.println("????" + num + "????");
		this.food -= num;
		return this.food;
	}

	@Override
	public String toString() {
		return this.name;
	}
}

public class MethodRefrenceDemo {

	public static void main(String[] args) {
		Dog dog = new Dog();
//		dog.eat(3);

		// ????????
		Consumer<String> consumer = System.out::println;
		consumer.accept("?????????");

		// ????????????????
		Consumer<Dog> consumer2 = Dog::bark;
		consumer2.accept(dog);

		// ????????????????????????????
		// Function<Integer, Integer> function = dog::eat;
//		Function<Integer, Integer> eat = dog::eat;

		// UnaryOperator<Integer> function = dog::eat;
		IntUnaryOperator function = dog::eat;
		
		// dog???????????????????��????java ????????
//		dog = null;
//		System.out.println("还剩下" + function.applyAsInt(2) + "斤狗粮!");
		//
		// // ?????????????????
		 BiFunction<Dog, Integer, Integer> eatFunction = Dog::eat;

		System.out.println("还剩下" + eatFunction.apply(dog,2) + "斤狗粮!");
		//
		// // ???????????????
		// Supplier<Dog> supplier = Dog::new;
		// System.out.println("???????????" + supplier.get());
		//
		// // ??????????????????????
		// Function<String, Dog> function2 = Dog::new;
		// System.out.println("???????????" + function2.apply("????"));
		Supplier<List> arrayListObjectFunction = ArrayList::new;
		List list1 = arrayListObjectFunction.get();
		// ????java?????????????????
		List<String> list = new ArrayList<>();
		test(list);

		System.err.println(list);
	}

	private static void test(List<String> list) {
		list = null;
	}
}
