2020-05-24 16:11:28 | [34mINFO [0;39m | [1;33mAsyncResolver-bootstrap-executor-0[0;39m | [1;32mcom.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[0;39m | Resolving eureka endpoints via configuration
2020-05-24 16:16:28 | [34mINFO [0;39m | [1;33mAsyncResolver-bootstrap-executor-0[0;39m | [1;32mcom.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[0;39m | Resolving eureka endpoints via configuration
2020-05-24 16:21:28 | [34mINFO [0;39m | [1;33mAsyncResolver-bootstrap-executor-0[0;39m | [1;32mcom.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[0;39m | Resolving eureka endpoints via configuration
2020-05-24 16:26:28 | [34mINFO [0;39m | [1;33mAsyncResolver-bootstrap-executor-0[0;39m | [1;32mcom.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[0;39m | Resolving eureka endpoints via configuration
2020-05-24 16:31:28 | [34mINFO [0;39m | [1;33mAsyncResolver-bootstrap-executor-0[0;39m | [1;32mcom.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[0;39m | Resolving eureka endpoints via configuration
2020-05-24 16:36:28 | [34mINFO [0;39m | [1;33mAsyncResolver-bootstrap-executor-0[0;39m | [1;32mcom.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[0;39m | Resolving eureka endpoints via configuration
2020-05-24 16:41:28 | [34mINFO [0;39m | [1;33mAsyncResolver-bootstrap-executor-0[0;39m | [1;32mcom.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[0;39m | Resolving eureka endpoints via configuration
2020-05-24 16:46:28 | [34mINFO [0;39m | [1;33mAsyncResolver-bootstrap-executor-0[0;39m | [1;32mcom.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[0;39m | Resolving eureka endpoints via configuration
2020-05-24 16:51:28 | [34mINFO [0;39m | [1;33mAsyncResolver-bootstrap-executor-0[0;39m | [1;32mcom.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[0;39m | Resolving eureka endpoints via configuration
2020-05-24 16:56:28 | [34mINFO [0;39m | [1;33mAsyncResolver-bootstrap-executor-0[0;39m | [1;32mcom.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[0;39m | Resolving eureka endpoints via configuration
2020-05-24 17:01:28 | [34mINFO [0;39m | [1;33mAsyncResolver-bootstrap-executor-0[0;39m | [1;32mcom.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[0;39m | Resolving eureka endpoints via configuration
2020-05-24 17:06:28 | [34mINFO [0;39m | [1;33mAsyncResolver-bootstrap-executor-0[0;39m | [1;32mcom.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[0;39m | Resolving eureka endpoints via configuration
2020-05-24 17:11:28 | [34mINFO [0;39m | [1;33mAsyncResolver-bootstrap-executor-0[0;39m | [1;32mcom.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[0;39m | Resolving eureka endpoints via configuration
2020-05-24 17:16:28 | [34mINFO [0;39m | [1;33mAsyncResolver-bootstrap-executor-0[0;39m | [1;32mcom.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[0;39m | Resolving eureka endpoints via configuration
2020-05-24 17:21:28 | [34mINFO [0;39m | [1;33mAsyncResolver-bootstrap-executor-0[0;39m | [1;32mcom.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[0;39m | Resolving eureka endpoints via configuration
2020-05-24 17:26:28 | [34mINFO [0;39m | [1;33mAsyncResolver-bootstrap-executor-0[0;39m | [1;32mcom.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[0;39m | Resolving eureka endpoints via configuration
2020-05-24 17:31:28 | [34mINFO [0;39m | [1;33mAsyncResolver-bootstrap-executor-0[0;39m | [1;32mcom.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[0;39m | Resolving eureka endpoints via configuration
2020-05-24 17:36:28 | [34mINFO [0;39m | [1;33mAsyncResolver-bootstrap-executor-0[0;39m | [1;32mcom.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[0;39m | Resolving eureka endpoints via configuration
2020-05-24 17:41:28 | [34mINFO [0;39m | [1;33mAsyncResolver-bootstrap-executor-0[0;39m | [1;32mcom.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[0;39m | Resolving eureka endpoints via configuration
2020-05-24 17:46:28 | [34mINFO [0;39m | [1;33mAsyncResolver-bootstrap-executor-0[0;39m | [1;32mcom.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[0;39m | Resolving eureka endpoints via configuration
2020-05-24 17:51:28 | [34mINFO [0;39m | [1;33mAsyncResolver-bootstrap-executor-0[0;39m | [1;32mcom.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[0;39m | Resolving eureka endpoints via configuration
2020-05-24 17:56:28 | [34mINFO [0;39m | [1;33mAsyncResolver-bootstrap-executor-0[0;39m | [1;32mcom.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[0;39m | Resolving eureka endpoints via configuration
2020-05-24 18:01:28 | [34mINFO [0;39m | [1;33mAsyncResolver-bootstrap-executor-0[0;39m | [1;32mcom.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[0;39m | Resolving eureka endpoints via configuration
2020-05-24 18:06:28 | [34mINFO [0;39m | [1;33mAsyncResolver-bootstrap-executor-0[0;39m | [1;32mcom.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[0;39m | Resolving eureka endpoints via configuration
2020-05-24 18:11:28 | [34mINFO [0;39m | [1;33mAsyncResolver-bootstrap-executor-0[0;39m | [1;32mcom.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[0;39m | Resolving eureka endpoints via configuration
2020-05-24 18:16:28 | [34mINFO [0;39m | [1;33mAsyncResolver-bootstrap-executor-0[0;39m | [1;32mcom.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[0;39m | Resolving eureka endpoints via configuration
2020-05-24 18:21:28 | [34mINFO [0;39m | [1;33mAsyncResolver-bootstrap-executor-0[0;39m | [1;32mcom.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[0;39m | Resolving eureka endpoints via configuration
2020-05-24 18:23:36 | [34mINFO [0;39m | [1;33mhttp-nio-9010-exec-5[0;39m | [1;32mcom.example.demo.rabbitmq.Wxsend[0;39m | 执行到----:0
2020-05-24 18:23:36 | [34mINFO [0;39m | [1;33mhttp-nio-9010-exec-5[0;39m | [1;32mcom.example.demo.rabbitmq.Wxsend[0;39m | 执行到----:1
2020-05-24 18:23:36 | [34mINFO [0;39m | [1;33mhttp-nio-9010-exec-5[0;39m | [1;32mcom.example.demo.rabbitmq.Wxsend[0;39m | 执行到----:2
2020-05-24 18:23:36 | [34mINFO [0;39m | [1;33mhttp-nio-9010-exec-5[0;39m | [1;32mcom.example.demo.rabbitmq.Wxsend[0;39m | 执行到----:3
2020-05-24 18:23:36 | [34mINFO [0;39m | [1;33mhttp-nio-9010-exec-5[0;39m | [1;32mcom.example.demo.rabbitmq.Wxsend[0;39m | 执行到----:4
2020-05-24 18:23:36 | [34mINFO [0;39m | [1;33mhttp-nio-9010-exec-5[0;39m | [1;32mcom.example.demo.rabbitmq.Wxsend[0;39m | 执行到----:5
2020-05-24 18:23:36 | [34mINFO [0;39m | [1;33mhttp-nio-9010-exec-5[0;39m | [1;32mcom.example.demo.rabbitmq.Wxsend[0;39m | 执行到----:6
2020-05-24 18:23:36 | [34mINFO [0;39m | [1;33mhttp-nio-9010-exec-5[0;39m | [1;32mcom.example.demo.rabbitmq.Wxsend[0;39m | 执行到----:7
2020-05-24 18:23:36 | [34mINFO [0;39m | [1;33mhttp-nio-9010-exec-5[0;39m | [1;32mcom.example.demo.rabbitmq.Wxsend[0;39m | 执行到----:8
2020-05-24 18:23:36 | [34mINFO [0;39m | [1;33mhttp-nio-9010-exec-5[0;39m | [1;32mcom.example.demo.rabbitmq.Wxsend[0;39m | 执行到----:9
2020-05-24 18:23:46 | [34mINFO [0;39m | [1;33mwxSimpleMessageListenerContainer-3[0;39m | [1;32mcom.example.demo.rabbitmq.WxReciver[0;39m | capp的返回结果----:成功capp的下标:0
2020-05-24 18:23:46 | [34mINFO [0;39m | [1;33mwxSimpleMessageListenerContainer-4[0;39m | [1;32mcom.example.demo.rabbitmq.WxReciver[0;39m | capp的返回结果----:成功capp的下标:1
2020-05-24 18:23:46 | [34mINFO [0;39m | [1;33mwxSimpleMessageListenerContainer-5[0;39m | [1;32mcom.example.demo.rabbitmq.WxReciver[0;39m | capp的返回结果----:成功capp的下标:2
2020-05-24 18:23:46 | [34mINFO [0;39m | [1;33mwxSimpleMessageListenerContainer-2[0;39m | [1;32mcom.example.demo.rabbitmq.WxReciver[0;39m | capp的返回结果----:成功capp的下标:3
2020-05-24 18:23:46 | [34mINFO [0;39m | [1;33mwxSimpleMessageListenerContainer-1[0;39m | [1;32mcom.example.demo.rabbitmq.WxReciver[0;39m | capp的返回结果----:成功capp的下标:4
2020-05-24 18:23:46 | [34mINFO [0;39m | [1;33mwxSimpleMessageListenerContainer-4[0;39m | [1;32mcom.example.demo.rabbitmq.WxReciver[0;39m | capp的返回结果----:成功capp的下标:6
2020-05-24 18:23:46 | [34mINFO [0;39m | [1;33mwxSimpleMessageListenerContainer-2[0;39m | [1;32mcom.example.demo.rabbitmq.WxReciver[0;39m | capp的返回结果----:成功capp的下标:8
2020-05-24 18:23:46 | [34mINFO [0;39m | [1;33mwxSimpleMessageListenerContainer-5[0;39m | [1;32mcom.example.demo.rabbitmq.WxReciver[0;39m | capp的返回结果----:成功capp的下标:7
2020-05-24 18:23:46 | [34mINFO [0;39m | [1;33mwxSimpleMessageListenerContainer-3[0;39m | [1;32mcom.example.demo.rabbitmq.WxReciver[0;39m | capp的返回结果----:成功capp的下标:5
2020-05-24 18:23:46 | [34mINFO [0;39m | [1;33mwxSimpleMessageListenerContainer-1[0;39m | [1;32mcom.example.demo.rabbitmq.WxReciver[0;39m | capp的返回结果----:成功capp的下标:9
2020-05-24 18:26:28 | [34mINFO [0;39m | [1;33mAsyncResolver-bootstrap-executor-0[0;39m | [1;32mcom.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[0;39m | Resolving eureka endpoints via configuration
2020-05-24 18:31:28 | [34mINFO [0;39m | [1;33mAsyncResolver-bootstrap-executor-0[0;39m | [1;32mcom.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[0;39m | Resolving eureka endpoints via configuration
2020-05-24 18:36:28 | [34mINFO [0;39m | [1;33mAsyncResolver-bootstrap-executor-0[0;39m | [1;32mcom.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[0;39m | Resolving eureka endpoints via configuration
2020-05-24 18:41:28 | [34mINFO [0;39m | [1;33mAsyncResolver-bootstrap-executor-0[0;39m | [1;32mcom.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[0;39m | Resolving eureka endpoints via configuration
2020-05-24 18:46:28 | [34mINFO [0;39m | [1;33mAsyncResolver-bootstrap-executor-0[0;39m | [1;32mcom.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[0;39m | Resolving eureka endpoints via configuration
2020-05-24 18:51:28 | [34mINFO [0;39m | [1;33mAsyncResolver-bootstrap-executor-0[0;39m | [1;32mcom.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[0;39m | Resolving eureka endpoints via configuration
2020-05-24 18:56:28 | [34mINFO [0;39m | [1;33mAsyncResolver-bootstrap-executor-0[0;39m | [1;32mcom.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[0;39m | Resolving eureka endpoints via configuration
2020-05-24 19:01:28 | [34mINFO [0;39m | [1;33mAsyncResolver-bootstrap-executor-0[0;39m | [1;32mcom.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[0;39m | Resolving eureka endpoints via configuration
2020-05-24 19:06:28 | [34mINFO [0;39m | [1;33mAsyncResolver-bootstrap-executor-0[0;39m | [1;32mcom.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[0;39m | Resolving eureka endpoints via configuration
2020-05-24 19:11:28 | [34mINFO [0;39m | [1;33mAsyncResolver-bootstrap-executor-0[0;39m | [1;32mcom.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[0;39m | Resolving eureka endpoints via configuration
2020-05-24 19:16:28 | [34mINFO [0;39m | [1;33mAsyncResolver-bootstrap-executor-0[0;39m | [1;32mcom.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[0;39m | Resolving eureka endpoints via configuration
2020-05-24 19:21:28 | [34mINFO [0;39m | [1;33mAsyncResolver-bootstrap-executor-0[0;39m | [1;32mcom.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[0;39m | Resolving eureka endpoints via configuration
2020-05-24 19:26:28 | [34mINFO [0;39m | [1;33mAsyncResolver-bootstrap-executor-0[0;39m | [1;32mcom.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[0;39m | Resolving eureka endpoints via configuration
2020-05-24 19:31:28 | [34mINFO [0;39m | [1;33mAsyncResolver-bootstrap-executor-0[0;39m | [1;32mcom.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[0;39m | Resolving eureka endpoints via configuration
2020-05-24 19:36:28 | [34mINFO [0;39m | [1;33mAsyncResolver-bootstrap-executor-0[0;39m | [1;32mcom.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[0;39m | Resolving eureka endpoints via configuration
2020-05-24 19:41:28 | [34mINFO [0;39m | [1;33mAsyncResolver-bootstrap-executor-0[0;39m | [1;32mcom.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[0;39m | Resolving eureka endpoints via configuration
2020-05-24 19:46:28 | [34mINFO [0;39m | [1;33mAsyncResolver-bootstrap-executor-0[0;39m | [1;32mcom.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[0;39m | Resolving eureka endpoints via configuration
2020-05-24 19:51:28 | [34mINFO [0;39m | [1;33mAsyncResolver-bootstrap-executor-0[0;39m | [1;32mcom.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[0;39m | Resolving eureka endpoints via configuration
2020-05-24 19:56:28 | [34mINFO [0;39m | [1;33mAsyncResolver-bootstrap-executor-0[0;39m | [1;32mcom.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[0;39m | Resolving eureka endpoints via configuration
2020-05-24 20:01:28 | [34mINFO [0;39m | [1;33mAsyncResolver-bootstrap-executor-0[0;39m | [1;32mcom.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[0;39m | Resolving eureka endpoints via configuration
2020-05-24 20:06:28 | [34mINFO [0;39m | [1;33mAsyncResolver-bootstrap-executor-0[0;39m | [1;32mcom.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[0;39m | Resolving eureka endpoints via configuration
2020-05-24 20:11:28 | [34mINFO [0;39m | [1;33mAsyncResolver-bootstrap-executor-0[0;39m | [1;32mcom.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[0;39m | Resolving eureka endpoints via configuration
2020-05-24 20:16:28 | [34mINFO [0;39m | [1;33mAsyncResolver-bootstrap-executor-0[0;39m | [1;32mcom.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[0;39m | Resolving eureka endpoints via configuration
2020-05-24 20:21:28 | [34mINFO [0;39m | [1;33mAsyncResolver-bootstrap-executor-0[0;39m | [1;32mcom.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[0;39m | Resolving eureka endpoints via configuration
2020-05-24 20:26:28 | [34mINFO [0;39m | [1;33mAsyncResolver-bootstrap-executor-0[0;39m | [1;32mcom.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[0;39m | Resolving eureka endpoints via configuration
2020-05-24 20:31:28 | [34mINFO [0;39m | [1;33mAsyncResolver-bootstrap-executor-0[0;39m | [1;32mcom.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[0;39m | Resolving eureka endpoints via configuration
2020-05-24 20:36:28 | [34mINFO [0;39m | [1;33mAsyncResolver-bootstrap-executor-0[0;39m | [1;32mcom.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[0;39m | Resolving eureka endpoints via configuration
2020-05-24 20:41:28 | [34mINFO [0;39m | [1;33mAsyncResolver-bootstrap-executor-0[0;39m | [1;32mcom.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[0;39m | Resolving eureka endpoints via configuration
2020-05-24 20:46:28 | [34mINFO [0;39m | [1;33mAsyncResolver-bootstrap-executor-0[0;39m | [1;32mcom.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[0;39m | Resolving eureka endpoints via configuration
2020-05-24 20:51:28 | [34mINFO [0;39m | [1;33mAsyncResolver-bootstrap-executor-0[0;39m | [1;32mcom.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[0;39m | Resolving eureka endpoints via configuration
2020-05-24 20:56:28 | [34mINFO [0;39m | [1;33mAsyncResolver-bootstrap-executor-0[0;39m | [1;32mcom.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[0;39m | Resolving eureka endpoints via configuration
2020-05-24 21:01:28 | [34mINFO [0;39m | [1;33mAsyncResolver-bootstrap-executor-0[0;39m | [1;32mcom.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[0;39m | Resolving eureka endpoints via configuration
2020-05-24 21:06:28 | [34mINFO [0;39m | [1;33mAsyncResolver-bootstrap-executor-0[0;39m | [1;32mcom.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[0;39m | Resolving eureka endpoints via configuration
2020-05-24 21:11:28 | [34mINFO [0;39m | [1;33mAsyncResolver-bootstrap-executor-0[0;39m | [1;32mcom.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[0;39m | Resolving eureka endpoints via configuration
2020-05-24 21:16:28 | [34mINFO [0;39m | [1;33mAsyncResolver-bootstrap-executor-0[0;39m | [1;32mcom.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[0;39m | Resolving eureka endpoints via configuration
2020-05-24 21:21:28 | [34mINFO [0;39m | [1;33mAsyncResolver-bootstrap-executor-0[0;39m | [1;32mcom.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[0;39m | Resolving eureka endpoints via configuration
2020-05-24 21:26:28 | [34mINFO [0;39m | [1;33mAsyncResolver-bootstrap-executor-0[0;39m | [1;32mcom.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[0;39m | Resolving eureka endpoints via configuration
2020-05-24 21:27:40 | [1;31mERROR[0;39m | [1;33mDiscoveryClient-HeartbeatExecutor-0[0;39m | [1;32mcom.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient[0;39m | Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:102)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:846)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1399)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 27 common frames omitted
2020-05-24 21:27:40 | [31mWARN [0;39m | [1;33mDiscoveryClient-HeartbeatExecutor-0[0;39m | [1;32mcom.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient[0;39m | Request execution failed with message: java.net.ConnectException: Connection refused: connect
2020-05-24 21:27:40 | [1;31mERROR[0;39m | [1;33mDiscoveryClient-CacheRefreshExecutor-0[0;39m | [1;32mcom.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient[0;39m | Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getDelta(AbstractJerseyEurekaHttpClient.java:170)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1085)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:967)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1471)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1438)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 common frames omitted
2020-05-24 21:27:40 | [31mWARN [0;39m | [1;33mDiscoveryClient-CacheRefreshExecutor-0[0;39m | [1;32mcom.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient[0;39m | Request execution failed with message: java.net.ConnectException: Connection refused: connect
2020-05-24 21:27:41 | [1;31mERROR[0;39m | [1;33mDiscoveryClient-HeartbeatExecutor-0[0;39m | [1;32mcom.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient[0;39m | Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:102)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:846)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1399)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 28 common frames omitted
2020-05-24 21:27:41 | [31mWARN [0;39m | [1;33mDiscoveryClient-HeartbeatExecutor-0[0;39m | [1;32mcom.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient[0;39m | Request execution failed with message: java.net.ConnectException: Connection refused: connect
2020-05-24 21:27:41 | [1;31mERROR[0;39m | [1;33mDiscoveryClient-HeartbeatExecutor-0[0;39m | [1;32mcom.netflix.discovery.DiscoveryClient[0;39m | DiscoveryClient_TENSQUARE-FRIEND/WIN-RMNCVCE7I3E.lan:tensquare-friend:9010 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:846)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1399)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
2020-05-24 21:27:41 | [1;31mERROR[0;39m | [1;33mDiscoveryClient-CacheRefreshExecutor-0[0;39m | [1;32mcom.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient[0;39m | Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getDelta(AbstractJerseyEurekaHttpClient.java:170)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1085)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:967)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1471)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1438)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 31 common frames omitted
2020-05-24 21:27:41 | [31mWARN [0;39m | [1;33mDiscoveryClient-CacheRefreshExecutor-0[0;39m | [1;32mcom.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient[0;39m | Request execution failed with message: java.net.ConnectException: Connection refused: connect
2020-05-24 21:27:41 | [1;31mERROR[0;39m | [1;33mDiscoveryClient-CacheRefreshExecutor-0[0;39m | [1;32mcom.netflix.discovery.DiscoveryClient[0;39m | DiscoveryClient_TENSQUARE-FRIEND/WIN-RMNCVCE7I3E.lan:tensquare-friend:9010 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1085)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:967)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1471)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1438)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
2020-05-24 21:27:46 | [34mINFO [0;39m | [1;33mDiscoveryClient-HeartbeatExecutor-0[0;39m | [1;32mcom.netflix.discovery.DiscoveryClient[0;39m | DiscoveryClient_TENSQUARE-FRIEND/WIN-RMNCVCE7I3E.lan:tensquare-friend:9010 - Re-registering apps/TENSQUARE-FRIEND
2020-05-24 21:27:46 | [34mINFO [0;39m | [1;33mDiscoveryClient-HeartbeatExecutor-0[0;39m | [1;32mcom.netflix.discovery.DiscoveryClient[0;39m | DiscoveryClient_TENSQUARE-FRIEND/WIN-RMNCVCE7I3E.lan:tensquare-friend:9010: registering service...
2020-05-24 21:27:47 | [34mINFO [0;39m | [1;33mDiscoveryClient-HeartbeatExecutor-0[0;39m | [1;32mcom.netflix.discovery.DiscoveryClient[0;39m | DiscoveryClient_TENSQUARE-FRIEND/WIN-RMNCVCE7I3E.lan:tensquare-friend:9010 - registration status: 204
2020-05-24 21:27:51 | [34mINFO [0;39m | [1;33mDiscoveryClient-CacheRefreshExecutor-0[0;39m | [1;32mcom.netflix.discovery.DiscoveryClient[0;39m | Disable delta property : false
2020-05-24 21:27:51 | [34mINFO [0;39m | [1;33mDiscoveryClient-CacheRefreshExecutor-0[0;39m | [1;32mcom.netflix.discovery.DiscoveryClient[0;39m | Single vip registry refresh property : null
2020-05-24 21:27:51 | [34mINFO [0;39m | [1;33mDiscoveryClient-CacheRefreshExecutor-0[0;39m | [1;32mcom.netflix.discovery.DiscoveryClient[0;39m | Force full registry fetch : false
2020-05-24 21:27:51 | [34mINFO [0;39m | [1;33mDiscoveryClient-CacheRefreshExecutor-0[0;39m | [1;32mcom.netflix.discovery.DiscoveryClient[0;39m | Application is null : false
2020-05-24 21:27:51 | [34mINFO [0;39m | [1;33mDiscoveryClient-CacheRefreshExecutor-0[0;39m | [1;32mcom.netflix.discovery.DiscoveryClient[0;39m | Registered Applications size is zero : true
2020-05-24 21:27:51 | [34mINFO [0;39m | [1;33mDiscoveryClient-CacheRefreshExecutor-0[0;39m | [1;32mcom.netflix.discovery.DiscoveryClient[0;39m | Application version is -1: false
2020-05-24 21:27:51 | [34mINFO [0;39m | [1;33mDiscoveryClient-CacheRefreshExecutor-0[0;39m | [1;32mcom.netflix.discovery.DiscoveryClient[0;39m | Getting all instance registry info from the eureka server
2020-05-24 21:27:51 | [34mINFO [0;39m | [1;33mDiscoveryClient-CacheRefreshExecutor-0[0;39m | [1;32mcom.netflix.discovery.DiscoveryClient[0;39m | The response status is 200
2020-05-24 21:27:56 | [34mINFO [0;39m | [1;33mDiscoveryClient-CacheRefreshExecutor-0[0;39m | [1;32mcom.netflix.discovery.DiscoveryClient[0;39m | Disable delta property : false
2020-05-24 21:27:56 | [34mINFO [0;39m | [1;33mDiscoveryClient-CacheRefreshExecutor-0[0;39m | [1;32mcom.netflix.discovery.DiscoveryClient[0;39m | Single vip registry refresh property : null
2020-05-24 21:27:56 | [34mINFO [0;39m | [1;33mDiscoveryClient-CacheRefreshExecutor-0[0;39m | [1;32mcom.netflix.discovery.DiscoveryClient[0;39m | Force full registry fetch : false
2020-05-24 21:27:56 | [34mINFO [0;39m | [1;33mDiscoveryClient-CacheRefreshExecutor-0[0;39m | [1;32mcom.netflix.discovery.DiscoveryClient[0;39m | Application is null : false
2020-05-24 21:27:56 | [34mINFO [0;39m | [1;33mDiscoveryClient-CacheRefreshExecutor-0[0;39m | [1;32mcom.netflix.discovery.DiscoveryClient[0;39m | Registered Applications size is zero : true
2020-05-24 21:27:56 | [34mINFO [0;39m | [1;33mDiscoveryClient-CacheRefreshExecutor-0[0;39m | [1;32mcom.netflix.discovery.DiscoveryClient[0;39m | Application version is -1: false
2020-05-24 21:27:56 | [34mINFO [0;39m | [1;33mDiscoveryClient-CacheRefreshExecutor-0[0;39m | [1;32mcom.netflix.discovery.DiscoveryClient[0;39m | Getting all instance registry info from the eureka server
2020-05-24 21:27:56 | [34mINFO [0;39m | [1;33mDiscoveryClient-CacheRefreshExecutor-0[0;39m | [1;32mcom.netflix.discovery.DiscoveryClient[0;39m | The response status is 200
2020-05-24 21:28:01 | [34mINFO [0;39m | [1;33mDiscoveryClient-CacheRefreshExecutor-0[0;39m | [1;32mcom.netflix.discovery.DiscoveryClient[0;39m | Disable delta property : false
2020-05-24 21:28:01 | [34mINFO [0;39m | [1;33mDiscoveryClient-CacheRefreshExecutor-0[0;39m | [1;32mcom.netflix.discovery.DiscoveryClient[0;39m | Single vip registry refresh property : null
2020-05-24 21:28:01 | [34mINFO [0;39m | [1;33mDiscoveryClient-CacheRefreshExecutor-0[0;39m | [1;32mcom.netflix.discovery.DiscoveryClient[0;39m | Force full registry fetch : false
2020-05-24 21:28:01 | [34mINFO [0;39m | [1;33mDiscoveryClient-CacheRefreshExecutor-0[0;39m | [1;32mcom.netflix.discovery.DiscoveryClient[0;39m | Application is null : false
2020-05-24 21:28:01 | [34mINFO [0;39m | [1;33mDiscoveryClient-CacheRefreshExecutor-0[0;39m | [1;32mcom.netflix.discovery.DiscoveryClient[0;39m | Registered Applications size is zero : true
2020-05-24 21:28:01 | [34mINFO [0;39m | [1;33mDiscoveryClient-CacheRefreshExecutor-0[0;39m | [1;32mcom.netflix.discovery.DiscoveryClient[0;39m | Application version is -1: false
2020-05-24 21:28:01 | [34mINFO [0;39m | [1;33mDiscoveryClient-CacheRefreshExecutor-0[0;39m | [1;32mcom.netflix.discovery.DiscoveryClient[0;39m | Getting all instance registry info from the eureka server
2020-05-24 21:28:01 | [34mINFO [0;39m | [1;33mDiscoveryClient-CacheRefreshExecutor-0[0;39m | [1;32mcom.netflix.discovery.DiscoveryClient[0;39m | The response status is 200
2020-05-24 21:31:28 | [34mINFO [0;39m | [1;33mAsyncResolver-bootstrap-executor-0[0;39m | [1;32mcom.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[0;39m | Resolving eureka endpoints via configuration
2020-05-24 21:32:16 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32morg.springframework.context.annotation.AnnotationConfigApplicationContext[0;39m | Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4f500a33: startup date [Sun May 24 21:32:16 CST 2020]; root of context hierarchy
2020-05-24 21:32:16 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32morg.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[0;39m | JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-05-24 21:32:16 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32morg.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[0;39m | Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$698d3c39] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-24 21:32:16 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32mcom.example.demo.DemoApplication[0;39m | No active profile set, falling back to default profiles: default
2020-05-24 21:32:16 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32morg.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext[0;39m | Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@396f8bc: startup date [Sun May 24 21:32:16 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4f500a33
2020-05-24 21:32:18 | [31mWARN [0;39m | [1;33mrestartedMain[0;39m | [1;32morg.mybatis.spring.mapper.ClassPathMapperScanner[0;39m | Skipping MapperFactoryBean with name 'bookMapper' and 'com.example.demo.mapper.BookMapper' mapperInterface. Bean already defined with the same name!
2020-05-24 21:32:18 | [31mWARN [0;39m | [1;33mrestartedMain[0;39m | [1;32morg.mybatis.spring.mapper.ClassPathMapperScanner[0;39m | Skipping MapperFactoryBean with name 'brokerMessageLogMapper' and 'com.example.demo.mapper.BrokerMessageLogMapper' mapperInterface. Bean already defined with the same name!
2020-05-24 21:32:18 | [31mWARN [0;39m | [1;33mrestartedMain[0;39m | [1;32morg.mybatis.spring.mapper.ClassPathMapperScanner[0;39m | Skipping MapperFactoryBean with name 'orderMapper' and 'com.example.demo.mapper.OrderMapper' mapperInterface. Bean already defined with the same name!
2020-05-24 21:32:18 | [31mWARN [0;39m | [1;33mrestartedMain[0;39m | [1;32morg.mybatis.spring.mapper.ClassPathMapperScanner[0;39m | Skipping MapperFactoryBean with name 'userMapper' and 'com.example.demo.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2020-05-24 21:32:18 | [31mWARN [0;39m | [1;33mrestartedMain[0;39m | [1;32morg.mybatis.spring.mapper.ClassPathMapperScanner[0;39m | No MyBatis mapper was found in '[com.example.demo]' package. Please check your configuration.
2020-05-24 21:32:18 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m | Multiple Spring Data modules found, entering strict repository configuration mode!
2020-05-24 21:32:19 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32morg.springframework.cloud.context.scope.GenericScope[0;39m | BeanFactory id=2fd2b8ef-500a-39f4-b51c-cbbd6f2def08
2020-05-24 21:32:19 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32morg.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[0;39m | JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-05-24 21:32:19 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32morg.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[0;39m | Bean 'asyncConfig' of type [com.example.demo.web.AsyncConfig$$EnhancerBySpringCGLIB$$bfb5d64b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-24 21:32:19 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32morg.springframework.scheduling.concurrent.ThreadPoolTaskExecutor[0;39m | Initializing ExecutorService 
2020-05-24 21:32:19 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32morg.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[0;39m | Bean 'org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration' of type [org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration$$EnhancerBySpringCGLIB$$13def76a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-24 21:32:19 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32morg.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[0;39m | Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4d73393c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-24 21:32:19 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32morg.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[0;39m | Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$698d3c39] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-24 21:32:20 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m | Tomcat initialized with port(s): 9010 (http)
2020-05-24 21:32:20 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32morg.apache.coyote.http11.Http11NioProtocol[0;39m | Initializing ProtocolHandler ["http-nio-9010"]
2020-05-24 21:32:20 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32morg.apache.catalina.core.StandardService[0;39m | Starting service [Tomcat]
2020-05-24 21:32:20 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32morg.apache.catalina.core.StandardEngine[0;39m | Starting Servlet Engine: Apache Tomcat/8.5.32
2020-05-24 21:32:20 | [34mINFO [0;39m | [1;33mlocalhost-startStop-1[0;39m | [1;32morg.apache.catalina.core.AprLifecycleListener[0;39m | The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;F:\软件\tp\;%SystemRoot%\system32;%SystemRoot%;%SystemRoot%\System32\Wbem;%SYSTEMROOT%\System32\WindowsPowerShell\v1.0\;%MYSQL%;%ERLANG_HOME%;;C:\Android;C:\Windows\System32;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;E:\paty\Fiddler;.]
2020-05-24 21:32:20 | [34mINFO [0;39m | [1;33mlocalhost-startStop-1[0;39m | [1;32morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][0;39m | Initializing Spring embedded WebApplicationContext
2020-05-24 21:32:20 | [34mINFO [0;39m | [1;33mlocalhost-startStop-1[0;39m | [1;32morg.springframework.web.context.ContextLoader[0;39m | Root WebApplicationContext: initialization completed in 3435 ms
2020-05-24 21:32:20 | [31mWARN [0;39m | [1;33mlocalhost-startStop-1[0;39m | [1;32mcom.netflix.config.sources.URLConfigurationSource[0;39m | No URLs will be polled as dynamic configuration sources.
2020-05-24 21:32:20 | [34mINFO [0;39m | [1;33mlocalhost-startStop-1[0;39m | [1;32mcom.netflix.config.sources.URLConfigurationSource[0;39m | To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-05-24 21:32:20 | [34mINFO [0;39m | [1;33mlocalhost-startStop-1[0;39m | [1;32mcom.netflix.config.DynamicPropertyFactory[0;39m | DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@119f8c30
2020-05-24 21:32:21 | [34mINFO [0;39m | [1;33mlocalhost-startStop-1[0;39m | [1;32morg.springframework.context.annotation.AnnotationConfigApplicationContext[0;39m | Refreshing FeignContext-tensquare-base: startup date [Sun May 24 21:32:21 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@396f8bc
2020-05-24 21:32:21 | [34mINFO [0;39m | [1;33mlocalhost-startStop-1[0;39m | [1;32morg.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[0;39m | JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-05-24 21:32:21 | [34mINFO [0;39m | [1;33mlocalhost-startStop-1[0;39m | [1;32mcom.alibaba.druid.pool.DruidDataSource[0;39m | {dataSource-1} inited
2020-05-24 21:32:21 | [34mINFO [0;39m | [1;33mlocalhost-startStop-1[0;39m | [1;32mcom.alibaba.druid.pool.DruidDataSource[0;39m | {dataSource-2} inited
2020-05-24 21:32:21 | [34mINFO [0;39m | [1;33mlocalhost-startStop-1[0;39m | [1;32mcom.alibaba.druid.pool.DruidDataSource[0;39m | {dataSource-3} inited
2020-05-24 21:32:21 | [34mINFO [0;39m | [1;33mlocalhost-startStop-1[0;39m | [1;32mcom.alibaba.druid.pool.DruidDataSource[0;39m | {dataSource-4} inited
2020-05-24 21:32:22 | [34mINFO [0;39m | [1;33mlocalhost-startStop-1[0;39m | [1;32morg.springframework.boot.web.servlet.FilterRegistrationBean[0;39m | Mapping filter: 'characterEncodingFilter' to: [/*]
2020-05-24 21:32:22 | [34mINFO [0;39m | [1;33mlocalhost-startStop-1[0;39m | [1;32morg.springframework.boot.web.servlet.FilterRegistrationBean[0;39m | Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-05-24 21:32:22 | [34mINFO [0;39m | [1;33mlocalhost-startStop-1[0;39m | [1;32morg.springframework.boot.web.servlet.FilterRegistrationBean[0;39m | Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-05-24 21:32:22 | [34mINFO [0;39m | [1;33mlocalhost-startStop-1[0;39m | [1;32morg.springframework.boot.web.servlet.FilterRegistrationBean[0;39m | Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-05-24 21:32:22 | [34mINFO [0;39m | [1;33mlocalhost-startStop-1[0;39m | [1;32morg.springframework.boot.web.servlet.FilterRegistrationBean[0;39m | Mapping filter: 'requestContextFilter' to: [/*]
2020-05-24 21:32:22 | [34mINFO [0;39m | [1;33mlocalhost-startStop-1[0;39m | [1;32morg.springframework.boot.web.servlet.FilterRegistrationBean[0;39m | Mapping filter: 'httpTraceFilter' to: [/*]
2020-05-24 21:32:22 | [34mINFO [0;39m | [1;33mlocalhost-startStop-1[0;39m | [1;32morg.springframework.boot.web.servlet.ServletRegistrationBean[0;39m | Servlet dispatcherServlet mapped to [/]
2020-05-24 21:32:23 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32morg.redisson.Version[0;39m | Redisson 3.5.7
2020-05-24 21:32:23 | [34mINFO [0;39m | [1;33mredisson-netty-4-17[0;39m | [1;32morg.redisson.connection.pool.MasterPubSubConnectionPool[0;39m | 1 connections initialized for /127.0.0.1:6379
2020-05-24 21:32:23 | [34mINFO [0;39m | [1;33mredisson-netty-4-16[0;39m | [1;32morg.redisson.connection.pool.MasterConnectionPool[0;39m | 10 connections initialized for /127.0.0.1:6379
2020-05-24 21:32:24 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[0;39m | Mapped "{[/test],methods=[GET]}" onto public java.lang.String com.example.demo.web.HelloController.test()
2020-05-24 21:32:24 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[0;39m | Mapped "{[/poi],methods=[GET]}" onto public void com.example.demo.web.HelloController.test(javax.servlet.http.HttpServletResponse) throws java.io.IOException
2020-05-24 21:32:24 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[0;39m | Mapped "{[/calculatePrice],methods=[GET]}" onto public java.math.BigDecimal com.example.demo.web.HelloController.calculatePrice(java.lang.String)
2020-05-24 21:32:24 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[0;39m | Mapped "{[/fang],methods=[POST]}" onto public java.lang.String com.example.demo.web.HelloController.fang(javax.servlet.http.HttpServletResponse,java.lang.String)
2020-05-24 21:32:24 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[0;39m | Mapped "{[/insertuser],methods=[POST]}" onto public com.example.demo.utils.Result com.example.demo.web.HelloController.insertuser(com.example.demo.web.RequestData)
2020-05-24 21:32:24 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[0;39m | Mapped "{[/searchM],methods=[GET]}" onto public com.example.demo.utils.Result<java.util.List<com.example.demo.pojo.User>> com.example.demo.web.HelloController.hello1()
2020-05-24 21:32:24 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[0;39m | Mapped "{[/search],methods=[GET]}" onto public java.util.List<com.example.demo.pojo.User> com.example.demo.web.HelloController.hello()
2020-05-24 21:32:24 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[0;39m | Mapped "{[/searchM3],methods=[GET]}" onto public com.example.demo.utils.Result com.example.demo.web.HelloController.hello2()
2020-05-24 21:32:24 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[0;39m | Mapped "{[/fangqq],methods=[GET]}" onto public java.lang.String com.example.demo.web.HelloController.fangqq(javax.servlet.http.HttpServletResponse) throws java.io.IOException
2020-05-24 21:32:24 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[0;39m | Mapped "{[/select/book],methods=[POST]}" onto public com.example.demo.entity.Book com.example.demo.web.statusMoveController.StatusMoveController.selectbook()
2020-05-24 21:32:24 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[0;39m | Mapped "{[/user/lock],methods=[GET]}" onto public com.example.demo.utils.Result com.example.demo.web.UserController.lock() throws java.lang.reflect.InvocationTargetException,java.lang.IllegalAccessException
2020-05-24 21:32:24 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[0;39m | Mapped "{[/user/isunLock],methods=[GET]}" onto public com.example.demo.utils.Result com.example.demo.web.UserController.isunLock(java.lang.Integer)
2020-05-24 21:32:24 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[0;39m | Mapped "{[/user/unLock],methods=[GET]}" onto public com.example.demo.utils.Result com.example.demo.web.UserController.unLock(java.lang.Integer)
2020-05-24 21:32:24 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[0;39m | Mapped "{[/wxmb/sendmsg],methods=[POST]}" onto public void com.example.demo.wx.moban.controller.WxMobanController.sendMsg(java.util.HashMap<java.lang.String, java.lang.Object>)
2020-05-24 21:32:24 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[0;39m | Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2020-05-24 21:32:24 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[0;39m | Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2020-05-24 21:32:24 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[0;39m | Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2020-05-24 21:32:24 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[0;39m | Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-05-24 21:32:24 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[0;39m | Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-05-24 21:32:24 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32morg.springframework.boot.actuate.endpoint.web.EndpointLinksResolver[0;39m | Exposing 2 endpoint(s) beneath base path '/actuator'
2020-05-24 21:32:24 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32morg.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[0;39m | Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-05-24 21:32:24 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32morg.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[0;39m | Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-05-24 21:32:24 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32morg.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[0;39m | Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-05-24 21:32:24 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32mspringfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping[0;39m | Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-05-24 21:32:25 | [31mWARN [0;39m | [1;33mrestartedMain[0;39m | [1;32mcom.netflix.config.sources.URLConfigurationSource[0;39m | No URLs will be polled as dynamic configuration sources.
2020-05-24 21:32:25 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32mcom.netflix.config.sources.URLConfigurationSource[0;39m | To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-05-24 21:32:25 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32morg.springframework.web.servlet.handler.SimpleUrlHandlerMapping[0;39m | Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-05-24 21:32:25 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter[0;39m | Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@396f8bc: startup date [Sun May 24 21:32:16 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4f500a33
2020-05-24 21:32:25 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32morg.springframework.web.servlet.handler.BeanNameUrlHandlerMapping[0;39m | Mapped URL path [/status] onto handler '/status'
2020-05-24 21:32:25 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32morg.springframework.web.servlet.handler.SimpleUrlHandlerMapping[0;39m | Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-05-24 21:32:25 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32morg.springframework.web.servlet.handler.SimpleUrlHandlerMapping[0;39m | Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-05-24 21:32:25 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32morg.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver[0;39m | Detected @ExceptionHandler methods in globalExceptionHandler
2020-05-24 21:32:25 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32mtk.mybatis.mapper.autoconfigure.MapperCacheDisabler[0;39m | Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-05-24 21:32:25 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32mtk.mybatis.mapper.autoconfigure.MapperCacheDisabler[0;39m | Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-05-24 21:32:25 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32mtk.mybatis.mapper.autoconfigure.MapperCacheDisabler[0;39m | Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-05-24 21:32:25 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32mtk.mybatis.mapper.autoconfigure.MapperCacheDisabler[0;39m | Clear EntityHelper entityTableMap cache.
2020-05-24 21:32:26 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32morg.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer[0;39m | LiveReload server is running on port 35729
2020-05-24 21:32:26 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32morg.springframework.jmx.export.annotation.AnnotationMBeanExporter[0;39m | Registering beans for JMX exposure on startup
2020-05-24 21:32:26 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32morg.springframework.jmx.export.annotation.AnnotationMBeanExporter[0;39m | Bean with name 'firstConnectionFactory' has been autodetected for JMX exposure
2020-05-24 21:32:26 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32morg.springframework.jmx.export.annotation.AnnotationMBeanExporter[0;39m | Bean with name 'secondConnectionFactory' has been autodetected for JMX exposure
2020-05-24 21:32:26 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32morg.springframework.jmx.export.annotation.AnnotationMBeanExporter[0;39m | Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-05-24 21:32:26 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32morg.springframework.jmx.export.annotation.AnnotationMBeanExporter[0;39m | Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-05-24 21:32:26 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32morg.springframework.jmx.export.annotation.AnnotationMBeanExporter[0;39m | Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-05-24 21:32:26 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32morg.springframework.jmx.export.annotation.AnnotationMBeanExporter[0;39m | Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-05-24 21:32:26 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32morg.springframework.jmx.export.annotation.AnnotationMBeanExporter[0;39m | Located managed bean 'firstConnectionFactory': registering with JMX server as MBean [org.springframework.amqp.rabbit.connection:name=firstConnectionFactory,type=CachingConnectionFactory]
2020-05-24 21:32:26 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32morg.springframework.jmx.export.annotation.AnnotationMBeanExporter[0;39m | Located managed bean 'secondConnectionFactory': registering with JMX server as MBean [org.springframework.amqp.rabbit.connection:name=secondConnectionFactory,type=CachingConnectionFactory]
2020-05-24 21:32:26 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32morg.springframework.jmx.export.annotation.AnnotationMBeanExporter[0;39m | Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-05-24 21:32:26 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32morg.springframework.jmx.export.annotation.AnnotationMBeanExporter[0;39m | Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=396f8bc,type=ConfigurationPropertiesRebinder]
2020-05-24 21:32:26 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32morg.springframework.context.support.DefaultLifecycleProcessor[0;39m | Starting beans in phase 0
2020-05-24 21:32:26 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32morg.springframework.cloud.netflix.eureka.InstanceInfoFactory[0;39m | Setting initial instance status as: STARTING
2020-05-24 21:32:26 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32mcom.netflix.discovery.DiscoveryClient[0;39m | Initializing Eureka in region us-east-1
2020-05-24 21:32:27 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32mcom.netflix.discovery.provider.DiscoveryJerseyProvider[0;39m | Using JSON encoding codec LegacyJacksonJson
2020-05-24 21:32:27 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32mcom.netflix.discovery.provider.DiscoveryJerseyProvider[0;39m | Using JSON decoding codec LegacyJacksonJson
2020-05-24 21:32:27 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32mcom.netflix.discovery.provider.DiscoveryJerseyProvider[0;39m | Using XML encoding codec XStreamXml
2020-05-24 21:32:27 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32mcom.netflix.discovery.provider.DiscoveryJerseyProvider[0;39m | Using XML decoding codec XStreamXml
2020-05-24 21:32:27 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32mcom.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[0;39m | Resolving eureka endpoints via configuration
2020-05-24 21:32:27 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32mcom.netflix.discovery.DiscoveryClient[0;39m | Disable delta property : false
2020-05-24 21:32:27 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32mcom.netflix.discovery.DiscoveryClient[0;39m | Single vip registry refresh property : null
2020-05-24 21:32:27 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32mcom.netflix.discovery.DiscoveryClient[0;39m | Force full registry fetch : false
2020-05-24 21:32:27 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32mcom.netflix.discovery.DiscoveryClient[0;39m | Application is null : false
2020-05-24 21:32:27 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32mcom.netflix.discovery.DiscoveryClient[0;39m | Registered Applications size is zero : true
2020-05-24 21:32:27 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32mcom.netflix.discovery.DiscoveryClient[0;39m | Application version is -1: true
2020-05-24 21:32:27 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32mcom.netflix.discovery.DiscoveryClient[0;39m | Getting all instance registry info from the eureka server
2020-05-24 21:32:27 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32mcom.netflix.discovery.DiscoveryClient[0;39m | The response status is 200
2020-05-24 21:32:27 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32mcom.netflix.discovery.DiscoveryClient[0;39m | Starting heartbeat executor: renew interval is: 5
2020-05-24 21:32:27 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32mcom.netflix.discovery.InstanceInfoReplicator[0;39m | InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-05-24 21:32:27 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32mcom.netflix.discovery.DiscoveryClient[0;39m | Discovery Client initialized at timestamp 1590327147625 with initial instances count: 2
2020-05-24 21:32:27 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32morg.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry[0;39m | Registering application tensquare-friend with eureka with status UP
2020-05-24 21:32:27 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32mcom.netflix.discovery.DiscoveryClient[0;39m | Saw local status change event StatusChangeEvent [timestamp=1590327147639, current=UP, previous=STARTING]
2020-05-24 21:32:27 | [34mINFO [0;39m | [1;33mDiscoveryClient-InstanceInfoReplicator-0[0;39m | [1;32mcom.netflix.discovery.DiscoveryClient[0;39m | DiscoveryClient_TENSQUARE-FRIEND/WIN-RMNCVCE7I3E:tensquare-friend:9010: registering service...
2020-05-24 21:32:27 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32morg.springframework.context.support.DefaultLifecycleProcessor[0;39m | Starting beans in phase 2147483647
2020-05-24 21:32:27 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32mspringfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper[0;39m | Context refreshed
2020-05-24 21:32:27 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32mspringfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper[0;39m | Found 1 custom documentation plugin(s)
2020-05-24 21:32:27 | [34mINFO [0;39m | [1;33mDiscoveryClient-InstanceInfoReplicator-0[0;39m | [1;32mcom.netflix.discovery.DiscoveryClient[0;39m | DiscoveryClient_TENSQUARE-FRIEND/WIN-RMNCVCE7I3E:tensquare-friend:9010 - registration status: 204
2020-05-24 21:32:27 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32mspringfox.documentation.spring.web.scanners.ApiListingReferenceScanner[0;39m | Scanning for api listing references
2020-05-24 21:32:27 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32mspringfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator[0;39m | Generating unique operation named: testUsingGET_1
2020-05-24 21:32:27 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32mspringfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator[0;39m | Generating unique operation named: handleUsingGET_1
2020-05-24 21:32:27 | [34mINFO [0;39m | [1;33mwxSimpleMessageListenerContainer-1[0;39m | [1;32morg.springframework.amqp.rabbit.connection.CachingConnectionFactory[0;39m | Attempting to connect to: 127.0.0.1:5672
2020-05-24 21:32:27 | [34mINFO [0;39m | [1;33mwxSimpleMessageListenerContainer-1[0;39m | [1;32morg.springframework.amqp.rabbit.connection.CachingConnectionFactory[0;39m | Created new connection: firstConnectionFactory#29e64665:0/SimpleConnection@38d5cc38 [delegate=amqp://guest@127.0.0.1:5672/slave, localPort= 54220]
2020-05-24 21:32:28 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32morg.apache.coyote.http11.Http11NioProtocol[0;39m | Starting ProtocolHandler ["http-nio-9010"]
2020-05-24 21:32:28 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32morg.apache.tomcat.util.net.NioSelectorPool[0;39m | Using a shared selector for servlet write/read
2020-05-24 21:32:28 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m | Tomcat started on port(s): 9010 (http) with context path ''
2020-05-24 21:32:28 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32morg.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration[0;39m | Updating port to 9010
2020-05-24 21:32:28 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32mcom.example.demo.DemoApplication[0;39m | Started DemoApplication in 12.539 seconds (JVM running for 13.545)
2020-05-24 21:32:28 | [34mINFO [0;39m | [1;33mRMI TCP Connection(2)-127.0.0.1[0;39m | [1;32morg.springframework.amqp.rabbit.connection.CachingConnectionFactory[0;39m | Attempting to connect to: 127.0.0.1:5672
2020-05-24 21:32:28 | [34mINFO [0;39m | [1;33mRMI TCP Connection(2)-127.0.0.1[0;39m | [1;32morg.springframework.amqp.rabbit.connection.CachingConnectionFactory[0;39m | Created new connection: secondConnectionFactory#2fc34385:0/SimpleConnection@66ecb80d [delegate=amqp://guest@127.0.0.1:5672/slave2, localPort= 54234]
2020-05-24 21:32:28 | [34mINFO [0;39m | [1;33mRMI TCP Connection(8)-127.0.0.1[0;39m | [1;32morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][0;39m | Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-05-24 21:32:28 | [34mINFO [0;39m | [1;33mRMI TCP Connection(8)-127.0.0.1[0;39m | [1;32morg.springframework.web.servlet.DispatcherServlet[0;39m | FrameworkServlet 'dispatcherServlet': initialization started
2020-05-24 21:32:28 | [34mINFO [0;39m | [1;33mRMI TCP Connection(8)-127.0.0.1[0;39m | [1;32morg.springframework.web.servlet.DispatcherServlet[0;39m | FrameworkServlet 'dispatcherServlet': initialization completed in 24 ms
2020-05-24 21:32:28 | [34mINFO [0;39m | [1;33mRMI TCP Connection(2)-127.0.0.1[0;39m | [1;32mio.lettuce.core.EpollProvider[0;39m | Starting without optional epoll library
2020-05-24 21:32:28 | [34mINFO [0;39m | [1;33mRMI TCP Connection(2)-127.0.0.1[0;39m | [1;32mio.lettuce.core.KqueueProvider[0;39m | Starting without optional kqueue library
2020-05-24 21:37:27 | [34mINFO [0;39m | [1;33mAsyncResolver-bootstrap-executor-0[0;39m | [1;32mcom.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[0;39m | Resolving eureka endpoints via configuration
2020-05-24 21:51:12 | [34mINFO [0;39m | [1;33mrestartedMain[0;39m | [1;32morg.springframework.context.annotation.AnnotationConfigApplicationContext[0;39m | Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@27a9e65c: startup date [Sun May 24 21:51:12 CST 2020]; root of context hierarchy
