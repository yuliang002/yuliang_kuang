<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.articleMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.entity.article">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="bookid" jdbcType="VARCHAR" property="bookid" />
    <result column="title_status" jdbcType="VARCHAR" property="titleStatus" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.example.demo.entity.article">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Base_Column_List">
    id, bookid, title_status
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from article
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from article
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.demo.entity.article">
    insert into article (id, bookid, title_status, 
      content)
    values (#{id,jdbcType=INTEGER}, #{bookid,jdbcType=VARCHAR}, #{titleStatus,jdbcType=VARCHAR}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.entity.article">
    insert into article
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="bookid != null">
        bookid,
      </if>
      <if test="titleStatus != null">
        title_status,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="bookid != null">
        #{bookid,jdbcType=VARCHAR},
      </if>
      <if test="titleStatus != null">
        #{titleStatus,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.entity.article">
    update article
    <set>
      <if test="bookid != null">
        bookid = #{bookid,jdbcType=VARCHAR},
      </if>
      <if test="titleStatus != null">
        title_status = #{titleStatus,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.example.demo.entity.article">
    update article
    set bookid = #{bookid,jdbcType=VARCHAR},
      title_status = #{titleStatus,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.entity.article">
    update article
    set bookid = #{bookid,jdbcType=VARCHAR},
      title_status = #{titleStatus,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>